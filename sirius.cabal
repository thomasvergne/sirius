cabal-version:   3.0

-- The cabal-version field refers to the version of the .cabal specification,
-- and can be different from the cabal-install (the tool) version and the
-- Cabal (the library) version you are using. As such, the Cabal (the library)
-- version used must be equal or greater than the version stated in this field.
-- Starting from the specification version 2.2, the cabal-version field must be
-- the first thing in the cabal file.

-- Initial package description 'sirius' generated by
-- 'cabal init'. For further documentation, see:
--   http://haskell.org/cabal/users-guide/
--
-- The name of the package.
name:            sirius

-- The package version.
-- See the Haskell package versioning policy (PVP) for standards
-- guiding when and how versions should be incremented.
-- https://pvp.haskell.org
-- PVP summary:     +-+------- breaking API changes
--                  | | +----- non-breaking API additions
--                  | | | +--- code changes with no API change
version:         0.1.0.0

-- A short (one-line) description of the package.
-- synopsis:

-- A longer description of the package.
-- description:

-- The license under which the package is released.
license:         MIT

-- The file containing the license text.
license-file:    LICENSE

-- The package author(s).
author:          thomasvergne

-- An email address to which users can send suggestions, bug reports, and patches.
maintainer:      thomas.vergne.contact@gmail.com

-- A copyright notice.
-- copyright:
category:        Language
build-type:      Simple

-- Extra doc files to be distributed with the package, such as a CHANGELOG or a README.
extra-doc-files: CHANGELOG.md

-- Extra source files to be distributed with the package, such as examples, or a tutorial module.
-- extra-source-files:

common warnings
  ghc-options: -Wall -j4

library
  -- Import common warning flags.
  import:           warnings

  -- Modules exported by the library.
  exposed-modules: 
    Language.Sirius.CST.Expression
      Language.Sirius.CST.Modules.Annoted
      Language.Sirius.CST.Modules.Literal
      Language.Sirius.CST.Modules.Located
      Language.Sirius.CST.Modules.Type
      Language.Sirius.CST.Modules.Namespaced
    
    Language.Sirius.Parser
      Language.Sirius.Parser.Expression
      Language.Sirius.Parser.Lexer
        Language.Sirius.Parser.Modules.Literal
        Language.Sirius.Parser.Modules.Type
        Language.Sirius.Parser.Modules.Operators
        Language.Sirius.Parser.Modules.Pattern
      Language.Sirius.Parser.Toplevel

    Language.Sirius.Module.Bundler
    Language.Sirius.Module.Monad
    Language.Sirius.Module.Resolver

    Language.Sirius.Typecheck
      Language.Sirius.Typecheck.Checker
        Language.Sirius.Typecheck.Modules.Substitution
        Language.Sirius.Typecheck.Modules.Unification
        Language.Sirius.Typecheck.Modules.Parser
        Language.Sirius.Typecheck.Modules.Apply
      Language.Sirius.Typecheck.ConstraintSolver
        Language.Sirius.Typecheck.Definition.AST
        Language.Sirius.Typecheck.Definition.Monad
        Language.Sirius.Typecheck.Definition.Type
    
    Language.Sirius.Monomorphize
    Language.Sirius.Enumeration

    Language.Sirius.ANF
      Language.Sirius.ANF.AST
      Language.Sirius.ANF.Monad
      Language.Sirius.ANF.Conversion
      Language.Sirius.ANF.MatchRemover

    Language.Sirius.Closure
      Language.Sirius.Closure.Monad
      Language.Sirius.Closure.Conversion
      Language.Sirius.Closure.Free
    
    Language.Sirius.Memory
      Language.Sirius.Memory.Management

    Language.Sirius.LLVM
      Language.Sirius.LLVM.Codegen
        Language.Sirius.LLVM.Modules.Monad
        Language.Sirius.LLVM.Modules.Type
        Language.Sirius.LLVM.Modules.UnionDebrujin

  -- Modules included in this library but not exported.
  -- other-modules:

  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:

  mixins:
    base hiding (Prelude),
    relude (Relude as Prelude),
    relude

  default-extensions:
    OverloadedStrings

  -- Other library packages from which modules are imported.
  build-depends:
    , base    ^>=4.14.3.0
    , relude
    , parsec
    , mtl
    , containers
    , llvm-hs
    , llvm-hs-pure
    , directory
    , filepath
    , process

  -- Directories containing source files.
  hs-source-dirs:   src

  -- Base language which the package is written in.
  default-language: Haskell2010

executable sirius
  -- Import common warning flags.
  import:           warnings

  -- .hs or .lhs file containing the Main module.
  main-is:          Main.hs

  mixins:
    base hiding (Prelude),
    relude (Relude as Prelude),
    relude

  -- Modules included in this executable, other than Main.
  -- other-modules:

  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:

  -- Other library packages from which modules are imported.
  build-depends:
    , base    ^>=4.14.3.0
    , sirius
    , relude

  -- Directories containing source files.
  hs-source-dirs:   app

  -- Base language which the package is written in.
  default-language: Haskell2010

test-suite sirius-test
  -- Import common warning flags.
  import:           warnings

  -- Base language which the package is written in.
  default-language: Haskell2010

  -- Modules included in this executable, other than Main.
  -- other-modules:

  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:

  -- The interface type and version of the test suite.
  type:             exitcode-stdio-1.0

  -- Directories containing source files.
  hs-source-dirs:   test

  -- The entrypoint to the test suite.
  main-is:          Main.hs

  -- Test dependencies.
  build-depends:
    , base    ^>=4.14.3.0
    , sirius
